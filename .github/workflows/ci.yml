name: MDFEniCSx CI|

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "main"

jobs:
  test:
    runs-on: ubuntu-latest
    container: dolfinx/dolfinx:v0.7.2
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          python-version: ["3.8"]
      - name: Install flake8
        run: python -m pip install flake8
      - name: Flake8 lint
        uses: py-actions/flake8@v2
        with:
          max-line-length: "80"
        run: |
          flake8 ./mdfenicsx/mesh_data/mesh.py
          flake8 ./mdfenicsx/mesh_motion_classes.py
          flake8 ./demo/0_fundamental_deformation/0_fundamentals.py
          flake8 ./demo/0_fundamental_deformation/mesh_data/mesh.py
          flake8 ./demo/*/*.py
          flake8 ./demo/*/mesh_data/mesh.py
      - name: Test dolfinx
        run: |
         python3 -c "import ufl; print('ufl import success')"
         mpiexec -n 3 python3 -c "import ufl; print('ufl import success')"
         python3 -c "from mpi4py import MPI; print('MPI import success')"
         mpiexec -n 3 python3 -c "from mpi4py import MPI; print('MPI import success')"
         python3 -c "import dolfinx; print('dolfinx import success')"
         mpiexec -n 3 python3 -c "import dolfinx; print(f'dolfinx version {dolfinx.__version__} import success')"
         python3 -c "import gmsh; print(f'gmsh version {gmsh.__version__} import success')"
         mpiexec -n 3 python3 -c "import gmsh; print(f'gmsh version {gmsh.__version__} import success')"
