name: MDFEniCSx CI

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "main"

jobs:
  test:
    runs-on: ubuntu-latest
    container: dolfinx/dolfinx:v0.7.2
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8"]
    steps:
       - name: Checkout code
         uses: actions/checkout@v4
       - name: Test dolfinx
         run: |
           python3 --version
           python3 -c "import ufl; print(f'ufl version {ufl.__version__} import success')"
           mpiexec -n 3 python3 -c "import ufl; print(f'ufl version {ufl.__version__} import success (parallel)')"
           python3 -c "from mpi4py import MPI; print(f'MPI version import success')"
           mpiexec -n 3 python3 -c "from mpi4py import MPI; print(f'MPI version import success (parallel)')"
           python3 -c "import dolfinx; print(f'dolfinx version {dolfinx.__version__} import success')"
           mpiexec -n 3 python3 -c "import dolfinx; print(f'dolfinx version {dolfinx.__version__} import success (parallel)')"
           python3 -c "import gmsh; print(f'gmsh version {gmsh.__version__} import success')"
           mpiexec -n 3 python3 -c "import gmsh; print(f'gmsh version {gmsh.__version__} import success (parallel)')"

  # ### Flake8 tests
  #flake8:
    #runs-on: ubuntu-latest
    #strategy:
      #fail-fast: false
      #matrix:
        #python-version: ["3.8"]
        #paths: [" "]
    #steps:
      #- name: Install flake8
        #uses: py-actions/flake8@v2
        #with:
          #max-line-length: "500"
          #path: ${{ matrix.paths }}

       #- name: Set up Python ${{ matrix.python-version }}
         #uses: actions/setup-python@v3
         #with:
           #python-version: ${{ matrix.python-version }}
